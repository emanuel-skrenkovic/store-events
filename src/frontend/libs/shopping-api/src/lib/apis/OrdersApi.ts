/* tslint:disable */
/* eslint-disable */
/**
 * Store.Api.Shopping
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Order,
    OrderFromJSON,
    OrderToJSON,
    OrderCreateCommand,
    OrderCreateCommandFromJSON,
    OrderCreateCommandToJSON,
    ProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models';

export interface OrdersActionsPlaceOrderPutRequest {
    orderCreateCommand?: OrderCreateCommand;
}

export interface OrdersIdGetRequest {
    id: string;
}

/**
 * 
 */
export class OrdersApi extends runtime.BaseAPI {

    /**
     */
    async ordersActionsPlaceOrderPutRaw(requestParameters: OrdersActionsPlaceOrderPutRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/Orders/actions/place-order`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: OrderCreateCommandToJSON(requestParameters.orderCreateCommand),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async ordersActionsPlaceOrderPut(requestParameters: OrdersActionsPlaceOrderPutRequest, initOverrides?: RequestInit): Promise<void> {
        await this.ordersActionsPlaceOrderPutRaw(requestParameters, initOverrides);
    }

    /**
     */
    async ordersIdGetRaw(requestParameters: OrdersIdGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Order>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling ordersIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Orders/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OrderFromJSON(jsonValue));
    }

    /**
     */
    async ordersIdGet(requestParameters: OrdersIdGetRequest, initOverrides?: RequestInit): Promise<Order> {
        const response = await this.ordersIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
