/* tslint:disable */
/* eslint-disable */
/**
 * Store.Api.Shopping
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderLine,
    OrderLineFromJSON,
    OrderLineFromJSONTyped,
    OrderLineToJSON,
} from './OrderLine';
import {
    OrderStatus,
    OrderStatusFromJSON,
    OrderStatusFromJSONTyped,
    OrderStatusToJSON,
} from './OrderStatus';
import {
    ShippingInformation,
    ShippingInformationFromJSON,
    ShippingInformationFromJSONTyped,
    ShippingInformationToJSON,
} from './ShippingInformation';

/**
 * 
 * @export
 * @interface Order
 */
export interface Order {
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    customerNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    paymentId?: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    customerEmail?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Order
     */
    totalAmount?: number;
    /**
     * 
     * @type {OrderStatus}
     * @memberof Order
     */
    status?: OrderStatus;
    /**
     * 
     * @type {Array<OrderLine>}
     * @memberof Order
     */
    orderLines?: Array<OrderLine> | null;
    /**
     * 
     * @type {ShippingInformation}
     * @memberof Order
     */
    shippingInformation?: ShippingInformation;
}

export function OrderFromJSON(json: any): Order {
    return OrderFromJSONTyped(json, false);
}

export function OrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Order {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customerNumber': !exists(json, 'customerNumber') ? undefined : json['customerNumber'],
        'paymentId': !exists(json, 'paymentId') ? undefined : json['paymentId'],
        'customerEmail': !exists(json, 'customerEmail') ? undefined : json['customerEmail'],
        'totalAmount': !exists(json, 'totalAmount') ? undefined : json['totalAmount'],
        'status': !exists(json, 'status') ? undefined : OrderStatusFromJSON(json['status']),
        'orderLines': !exists(json, 'orderLines') ? undefined : (json['orderLines'] === null ? null : (json['orderLines'] as Array<any>).map(OrderLineFromJSON)),
        'shippingInformation': !exists(json, 'shippingInformation') ? undefined : ShippingInformationFromJSON(json['shippingInformation']),
    };
}

export function OrderToJSON(value?: Order | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customerNumber': value.customerNumber,
        'paymentId': value.paymentId,
        'customerEmail': value.customerEmail,
        'totalAmount': value.totalAmount,
        'status': OrderStatusToJSON(value.status),
        'orderLines': value.orderLines === undefined ? undefined : (value.orderLines === null ? null : (value.orderLines as Array<any>).map(OrderLineToJSON)),
        'shippingInformation': ShippingInformationToJSON(value.shippingInformation),
    };
}

